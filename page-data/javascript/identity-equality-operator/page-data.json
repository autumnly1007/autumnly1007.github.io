{
    "componentChunkName": "component---src-templates-blog-template-js",
    "path": "/javascript/identity-equality-operator/",
    "result": {"data":{"cur":{"id":"d900c62e-6c44-5b46-b298-964cb215c1cc","html":"<h2 id=\"-일치연산자와-동등연산자\" style=\"position:relative;\"><a href=\"#-%EC%9D%BC%EC%B9%98%EC%97%B0%EC%82%B0%EC%9E%90%EC%99%80-%EB%8F%99%EB%93%B1%EC%97%B0%EC%82%B0%EC%9E%90\" aria-label=\" 일치연산자와 동등연산자 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>💙 일치연산자와 동등연산자</h2>\n<h3 id=\"1-일치연산자-identity-operator\" style=\"position:relative;\"><a href=\"#1-%EC%9D%BC%EC%B9%98%EC%97%B0%EC%82%B0%EC%9E%90-identity-operator\" aria-label=\"1 일치연산자 identity operator permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 일치연산자 (Identity Operator)</h3>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> a <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> a <span class=\"token operator\">=</span> <span class=\"token string\">'1'</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>a <span class=\"token operator\">===</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false</span></code></pre></div>\n<p>두 데이터의 데이터타입, 값이 일치하는지 비교한다.</p>\n<br />\n<h3 id=\"1-동등연산자-equality-operator\" style=\"position:relative;\"><a href=\"#1-%EB%8F%99%EB%93%B1%EC%97%B0%EC%82%B0%EC%9E%90-equality-operator\" aria-label=\"1 동등연산자 equality operator permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 동등연산자 (Equality Operator)</h3>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> a <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> a <span class=\"token operator\">=</span> <span class=\"token string\">'1'</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>a <span class=\"token operator\">==</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span></code></pre></div>\n<p>두 데이터의 값만 일치하는지 비교한다.<br />\n동등연산자를 사용하면 형변환이 일어나면서 두 데이터를 비교하기 때문에<br />\n의도하지 않게 다른 값이 같다는 결과가 나오기 때문에 사용이 권장되지 않는다.</p>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#-%EC%9D%BC%EC%B9%98%EC%97%B0%EC%82%B0%EC%9E%90%EC%99%80-%EB%8F%99%EB%93%B1%EC%97%B0%EC%82%B0%EC%9E%90\">💙 일치연산자와 동등연산자</a></p>\n<ul>\n<li><a href=\"#1-%EC%9D%BC%EC%B9%98%EC%97%B0%EC%82%B0%EC%9E%90-identity-operator\">1. 일치연산자 (Identity Operator)</a></li>\n<li><a href=\"#1-%EB%8F%99%EB%93%B1%EC%97%B0%EC%82%B0%EC%9E%90-equality-operator\">1. 동등연산자 (Equality Operator)</a></li>\n</ul>\n</li>\n</ul>\n</div>","excerpt":"💙 일치연산자와 동등연산자 1. 일치연산자 (Identity Operator) 두 데이터의 데이터타입, 값이 일치하는지 비교한다. 1. 동등연산자 (Equality Operator) 두 데이터의 값만 일치하는지 비교한다.\n동등연산자를 사용하면 형변환이 일어나면서 두 데이터를 비교하기 때문에\n의도하지 않게 다른 값이 같다는 결과가 나오기 때문에 사용이 권장되지 않는다. 💙 일치연산자와 동등연산자 1. 일치연산자 (Identity Operator) 1. 동등연산자 (Equality Operator)","frontmatter":{"date":"2022.04.03","title":"[JS] 일치연산자와 동등연산자","categories":"JS","author":"안가을","emoji":null},"fields":{"slug":"/javascript/identity-equality-operator/"}},"next":{"id":"2334b576-3baf-5204-934e-4da1e2104030","html":"<h2 id=\"-변수의-유효범위-variable-scope\" style=\"position:relative;\"><a href=\"#-%EB%B3%80%EC%88%98%EC%9D%98-%EC%9C%A0%ED%9A%A8%EB%B2%94%EC%9C%84-variable-scope\" aria-label=\" 변수의 유효범위 variable scope permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>💙 변수의 유효범위 (Variable Scope)</h2>\n<br />\n<h3 id=\"1-블록-레벨-유효범위-block-level-scope\" style=\"position:relative;\"><a href=\"#1-%EB%B8%94%EB%A1%9D-%EB%A0%88%EB%B2%A8-%EC%9C%A0%ED%9A%A8%EB%B2%94%EC%9C%84-block-level-scope\" aria-label=\"1 블록 레벨 유효범위 block level scope permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 블록 레벨 유효범위 (Block Level Scope)</h3>\n<p>블록 레벨 유효범위를 가지는 변수 키워드에는 <code class=\"language-text\">let</code>, <code class=\"language-text\">const</code> 가 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">scope</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> a <span class=\"token operator\">=</span> <span class=\"token number\">123</span><span class=\"token punctuation\">;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>const 변수가 선언된 해당 블록 안에 있기 때문에 동작이 가능하다.</p>\n<br />\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">scope</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> a <span class=\"token operator\">=</span> <span class=\"token number\">123</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>const 변수가 선언된 해당 블록을 벗어나기 때문에 동작이 불가능하다.<br />\nUncaught ReferenceError: a is not defined at scope 에러가 발생한다.</p>\n<br />\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">scope</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> a <span class=\"token operator\">=</span> <span class=\"token number\">123</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>const 변수가 선언된 해당 블록 안에 있기는 하지만,<br />\n변수에 값이 할당된 코드보다 먼저 출력되기 때문에 undefined 출력된다.</p>\n<br />\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">scope</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> a <span class=\"token operator\">=</span> <span class=\"token number\">123</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><code class=\"language-text\">const</code> 변수가 선언된 해당 블록을 벗어나기 때문에 동작이 불가능하다.<br />\nUncaught ReferenceError: a is not defined at scope 에러가 발생한다.</p>\n<p>위 코드의 const 키워드를 <code class=\"language-text\">let</code> 으로 바꾸어도 결과는 같다.</p>\n<p>let, const 키워드를 사용하는 변수는 블록 레벨의 유효 범위를 가진다.<br />\n변수가 선언되어져 있는 범위의 중괄호 사이의 부분이 블록을 의미한다.</p>\n<br />\n<h3 id=\"2-함수-레벨-유효범위-function-level-scope\" style=\"position:relative;\"><a href=\"#2-%ED%95%A8%EC%88%98-%EB%A0%88%EB%B2%A8-%EC%9C%A0%ED%9A%A8%EB%B2%94%EC%9C%84-function-level-scope\" aria-label=\"2 함수 레벨 유효범위 function level scope permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 함수 레벨 유효범위 (Function Level Scope)</h3>\n<p>함수 레벨 유효범위를 가지는 변수 키워드에는 <code class=\"language-text\">var</code>이 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">scope</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> a <span class=\"token operator\">=</span> <span class=\"token number\">123</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><code class=\"language-text\">var</code> 키워드를 사용하는 변수는<br />\n선언된 함수 범위 안에서는 어디서든 사용할 수 있기 때문에 에러가 발생하지 않는다.<br />\n값이 지정되어져 있지 않다는 undefined 가 출력된다.</p>\n<br />\n<p>의도하지 않은 범위에서 변수가 샤용될 수 있기 때문에<br />\n그만큼 메모리를 차지하고 있고,<br />\n그것이 결국 개발자가 확인하지 못하는 메모리 누수로 발전할 수 있다.</p>\n<p>일반적인 경우에는 var 키워드 보다는 <code class=\"language-text\">let</code>, <code class=\"language-text\">const</code> 를 이용해서 <br />\n블록 레벨의 유효범위를 가지도록 변수를 만들어 주는 것이 관리하기에 효과적이다.</p>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#-%EB%B3%80%EC%88%98%EC%9D%98-%EC%9C%A0%ED%9A%A8%EB%B2%94%EC%9C%84-variable-scope\">💙 변수의 유효범위 (Variable Scope)</a></p>\n<ul>\n<li><a href=\"#1-%EB%B8%94%EB%A1%9D-%EB%A0%88%EB%B2%A8-%EC%9C%A0%ED%9A%A8%EB%B2%94%EC%9C%84-block-level-scope\">1. 블록 레벨 유효범위 (Block Level Scope)</a></li>\n<li><a href=\"#2-%ED%95%A8%EC%88%98-%EB%A0%88%EB%B2%A8-%EC%9C%A0%ED%9A%A8%EB%B2%94%EC%9C%84-function-level-scope\">2. 함수 레벨 유효범위 (Function Level Scope)</a></li>\n</ul>\n</li>\n</ul>\n</div>","frontmatter":{"date":"2022.04.03","title":"[JS] 변수의 유효범위","categories":"JS","author":"안가을","emoji":null},"fields":{"slug":"/javascript/scope/"}},"prev":{"id":"28790533-41f4-5991-9f9e-101cfe00695e","html":"<h2 id=\"-형변환-type-conversion\" style=\"position:relative;\"><a href=\"#-%ED%98%95%EB%B3%80%ED%99%98-type-conversion\" aria-label=\" 형변환 type conversion permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>💙 형변환 (Type Conversion)</h2>\n<h3 id=\"1-truthy-참-같은-값\" style=\"position:relative;\"><a href=\"#1-truthy-%EC%B0%B8-%EA%B0%99%EC%9D%80-%EA%B0%92\" aria-label=\"1 truthy 참 같은 값 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. Truthy (참 같은 값)</h3>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'false'</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">12</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'3.14'</span> <span class=\"token operator\">...</span></code></pre></div>\n<br />\n<h3 id=\"2-falsy-거짓-같은-값\" style=\"position:relative;\"><a href=\"#2-falsy-%EA%B1%B0%EC%A7%93-%EA%B0%99%EC%9D%80-%EA%B0%92\" aria-label=\"2 falsy 거짓 같은 값 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. Falsy (거짓 같은 값)</h3>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">NaN</span><span class=\"token punctuation\">;</span></code></pre></div>\n<br />\n<p>이러한 Truthy, Falsy 값들은 각각 true, false 로 <code class=\"language-text\">형변환</code>이 발생하여 해석된다.<br />\nTruthy 는 너무 많기 때문에 Falsy 를 잘 기억해 두면 된다.</p>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#-%ED%98%95%EB%B3%80%ED%99%98-type-conversion\">💙 형변환 (Type Conversion)</a></p>\n<ul>\n<li><a href=\"#1-truthy-%EC%B0%B8-%EA%B0%99%EC%9D%80-%EA%B0%92\">1. Truthy (참 같은 값)</a></li>\n<li><a href=\"#2-falsy-%EA%B1%B0%EC%A7%93-%EA%B0%99%EC%9D%80-%EA%B0%92\">2. Falsy (거짓 같은 값)</a></li>\n</ul>\n</li>\n</ul>\n</div>","frontmatter":{"date":"2022.04.03","title":"[JS] Truthy, Falsy","categories":"JS","author":"안가을","emoji":null},"fields":{"slug":"/javascript/type-conversion/"}},"site":{"siteMetadata":{"siteUrl":"https://autumnly1007.github.io","comments":{"utterances":{"repo":"autumnly1007/autumnly1007.github.io"}}}}},"pageContext":{"slug":"/javascript/identity-equality-operator/","nextSlug":"/javascript/scope/","prevSlug":"/javascript/type-conversion/"}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437"]}