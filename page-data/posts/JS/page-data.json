{
    "componentChunkName": "component---src-templates-category-template-js",
    "path": "/posts/JS",
    "result": {"pageContext":{"currentCategory":"JS","categories":["All","WEB","JS","CSS","TOOL","BLOG"],"edges":[{"node":{"id":"31ddae32-18d1-5ac0-88a0-34bd1d0dc882","excerpt":"💙 메소드 체이닝 (Method Chaning) 메소드를 마치 체인처럼 연결해서 사용하는 것을 의미한다. 💙 메소드 체이닝 (Method Chaning)","fields":{"slug":"/javascript/method-chainning/"},"frontmatter":{"categories":"JS","title":"[JavaScript] 메소드 체이닝","date":"2022.03.20"}},"next":{"fields":{"slug":"/javascript/dom-api/"}},"previous":{"fields":{"slug":"/web/favicon/"}}},{"node":{"id":"2fc011fc-fc34-519e-b44c-8c54ccd0fe74","excerpt":"💙 DOM API 1. DOM API Document Object Model, Application Programming Interface defer: 페이지가 모두 로드된 후에 해당 외부 스크립트가 실행됨을 명시함 2. querySelector & addEventListener 3. classList (add, remove) 4. querySelectorAll & forEach 5. textContent 💙 DOM API 1. DOM API 2. querySelector & addEventListener 3. classList (add, remove) 4. querySelectorAll & forEach 5. textContent","fields":{"slug":"/javascript/dom-api/"},"frontmatter":{"categories":"JS","title":"[JavaScript] DOM API","date":"2022.03.20"}},"next":{"fields":{"slug":"/javascript/object/"}},"previous":{"fields":{"slug":"/javascript/method-chainning/"}}},{"node":{"id":"0c0abb7f-fed3-5a72-b9ec-8f5888127667","excerpt":"💙 객체와 메소드 객체 안에 있는 속성에 함수를 할당한 것은\n속성이 아니라 메소드라고 한다. 💙 객체와 메소드","fields":{"slug":"/javascript/object/"},"frontmatter":{"categories":"JS","title":"[JavaScript] 객체 & 메소드","date":"2022.03.19"}},"next":{"fields":{"slug":"/javascript/function/"}},"previous":{"fields":{"slug":"/javascript/dom-api/"}}},{"node":{"id":"e4dead3f-7718-5882-8af6-62b91e401da1","excerpt":"💙 함수의 선언과 함수의 표현 1. 기명 함수 (이름이 있는 함수) function 키워드를 사용하고,\n이름을 직접적으로 명시하는 것을 함수의 선언이라고 한다. 2. 익명 함수 (이름이 없는 함수) 이름의 명시 없이,\n변수에 할당하여 사용하는 것은 함수의 표현이라고 한다. 💙 함수의 선언과 함수의 표현 1. 기명 함수 (이름이 있는 함수) 2. 익명 함수 (이름이 없는 함수)","fields":{"slug":"/javascript/function/"},"frontmatter":{"categories":"JS","title":"[JavaScript] 함수 선언 & 함수 표현","date":"2022.03.19"}},"next":{"fields":{"slug":"/javascript/parameter/"}},"previous":{"fields":{"slug":"/javascript/object/"}}},{"node":{"id":"a3e9ee8e-60fd-5af4-a1f1-290ab8c4dbd8","excerpt":"💙 매개변수와 인수 1. 매개변수 (Parameters) 함수 안에서 사용하는 데이터를 받아주는 매개체가 되는 변수\n함수 안에서만 사용이 가능 2. 인수 (Arguments) 함수의 매개변수가 받아 줄 특정한 데이터 💙 매개변수와 인수 1. 매개변수 (Parameters) 2. 인수 (Arguments)","fields":{"slug":"/javascript/parameter/"},"frontmatter":{"categories":"JS","title":"[JavaScript] 매개변수 & 인수","date":"2022.03.19"}},"next":{"fields":{"slug":"/javascript/null/"}},"previous":{"fields":{"slug":"/javascript/function/"}}},{"node":{"id":"d58edc14-e973-57a8-8309-51430aabbdb7","excerpt":"💙 null 과 undefined 1.null 어떤 값이 의도적으로 비어있음을 의미한다. 2. undefined 값이 할당되지 않은 상태를 나타낸다. [ null 체크 ]\n체크대상 === null 보다는, 체크대상 == null 로 하는 것이 좋다.\n 는  이기 때문에\n체크대상 == null 로 체크하면 null 과 undefined 를 모두 체크할 수 있기 때문이다. 0 == null == undefined == ‘’ == false 💙 null 과 undefined 1.null 2. undefined","fields":{"slug":"/javascript/null/"},"frontmatter":{"categories":"JS","title":"[JavaScript] Null & Undefined","date":"2022.03.19"}},"next":{"fields":{"slug":"/javascript/variable/"}},"previous":{"fields":{"slug":"/javascript/parameter/"}}},{"node":{"id":"40b003a4-60c7-558e-a64a-211793705fc3","excerpt":"💙 변수와 예약어 1. 변수 (Variable) 데이터를 지정하고 참조(사용)하는 데이터의 이름 var: 사용하지 않는 것이 권장됨 (호이스팅 문제) let: 재할당 가능 const: 재할당 불가능 2. 예약어 (Reserved Word) 특별한 의미를 가지고 있어, 변수나 함수 이름 등으로 사용할 수 없는 단어 if, else, false, true, while, this, break … 💙 변수와 예약어 1. 변수 (Variable) 2. 예약어 (Reserved Word)","fields":{"slug":"/javascript/variable/"},"frontmatter":{"categories":"JS","title":"[JavaScript] 변수 & 예약어","date":"2022.03.19"}},"next":{"fields":{"slug":"/web/notation/"}},"previous":{"fields":{"slug":"/javascript/null/"}}}]}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437"]}