{
    "componentChunkName": "component---src-templates-category-template-js",
    "path": "/posts/WEB",
    "result": {"pageContext":{"currentCategory":"WEB","categories":["All","JS","WEB","CSS","TOOL","BLOG"],"edges":[{"node":{"id":"59a4b30d-4611-57ca-a685-ba209a2188e8","excerpt":"💙 .gitignore 프로젝트 최상단에 .gitignore 파일을 생성한다.\n해당 파일에서 git 에서 버전관리를 무시할 폴더나 파일들을 명시해 주면 된다. 대표적으로 node_modules 폴더는 용량이 매우 크고,\nnpm i (install) / npm run dev(build) 명령을 통해 재설치할 수 있기 때문에 굳이 버전관리를 할 필요가 없다. 💙 .gitignore","fields":{"slug":"/web/gitignore/"},"frontmatter":{"categories":"WEB","title":".gitignore","date":"2022.04.03"}},"next":{"fields":{"slug":"/javascript/semantic-versioning/"}},"previous":{"fields":{"slug":"/javascript/ecma-script/"}}},{"node":{"id":"a06908a0-40f8-5c34-8149-04c8fa9e1dbf","excerpt":"💙 HTML 엔티티 https://dev.w3.org/html5/html-author/charref 💙 HTML 엔티티","fields":{"slug":"/web/html-entities/"},"frontmatter":{"categories":"WEB","title":"HTML 엔티티","date":"2022.03.27"}},"next":{"fields":{"slug":"/web/bem/"}},"previous":{"fields":{"slug":"/javascript/node-js/"}}},{"node":{"id":"854e93d7-bb31-559e-b15f-7c0b016efef0","excerpt":"💙 BEM (Block Element Modifier) HTML 클래스 속성의 작명법 1.  Underscore(Ladash) 기호로 요소의 일부분을 표시 클래스이름만 보고도 어느 요소의 일부분인지 직관적으로 유추할 수 있다. 2.  Hyphen(Dash) 기호로 요소의 상태를 표시 클래스의 이름만 보고도 어떤 역할을 할 것인지 유추할 수 있다. 💙 BEM (Block Element Modifier) 1.  2.","fields":{"slug":"/web/bem/"},"frontmatter":{"categories":"WEB","title":"BEM","date":"2022.03.26"}},"next":{"fields":{"slug":"/web/seo/"}},"previous":{"fields":{"slug":"/web/html-entities/"}}},{"node":{"id":"59aa8d0a-3592-59f6-9bfc-15ed60a6f3f6","excerpt":"💙 SEO (검색 엔진 최적화, Search Engine Optimization) 구글이나 네이버 등에 자신의 웹 사이트/페이지를 노출할 수 있도록\n정보를 최적화 하는 작업을 말한다. … 💙 SEO (검색 엔진 최적화, Search Engine Optimization)","fields":{"slug":"/web/seo/"},"frontmatter":{"categories":"WEB","title":"SEO (검색 엔진 최적화)","date":"2022.03.21"}},"next":{"fields":{"slug":"/web/opengraph/"}},"previous":{"fields":{"slug":"/web/bem/"}}},{"node":{"id":"74444e5f-85fa-5a0a-81a6-28f3dfe167a4","excerpt":"💙 오픈 그래프 1. 오픈 그래프 (The Open Graph protocol) 웹페이지가 소셜 미디어(카카오톡, 페이스북 등)로 공유될 때 우선적으로 활용되는 정보를 지정할 수 있다. og:type: 페이지의 유형(E.g, website, video.movie) og:site_name: 속한 사이트의 이름 og:title: 페이지의 이름(제목) og:description: 페이지의 간단한 설명 og:image: 페이지의 대표 이미지 주소(URL) og:url: 페이지 주소(URL) 참고: https://ogp.me/ 2. 트위터 카드 (Twitter Cards) 웹페이지가 트위터로 공유될 때 우선적으로 활용되는 정보를 지정할 수 있다. twitter:card: 페이지(카드)의 유형(E.g. summary, player) twitter:site: 속한 사이트의 이름 twitter:title: 페이지의 이름(제목) twitter:description: 페이지의 간단한 설명 twitt…","fields":{"slug":"/web/opengraph/"},"frontmatter":{"categories":"WEB","title":"오픈 그래프","date":"2022.03.21"}},"next":{"fields":{"slug":"/web/favicon/"}},"previous":{"fields":{"slug":"/web/seo/"}}},{"node":{"id":"1868615b-17c6-5f0b-ab0a-ca54b53710a7","excerpt":"favicon favicon 을 따로 지정하지 않으면\n기본적으로 브라우저는\n루트 경로에 있는 favicon.ico 파일을 찾아서\n해당 페이지의 아이콘으로 사용한다. 다른 형식의 이미지 파일을 favicon 으로 사용할 때에는\nlink 태그로 지정해 주어야 한다. .ico 파일 만들기 : https://iconifier.net/ favicon","fields":{"slug":"/web/favicon/"},"frontmatter":{"categories":"WEB","title":"Favicon","date":"2022.03.20"}},"next":{"fields":{"slug":"/javascript/method-chainning/"}},"previous":{"fields":{"slug":"/web/opengraph/"}}},{"node":{"id":"2279186b-dc5a-5377-9519-c4fa16cb5642","excerpt":"💙 표기법 1.dash-case(kebab-case) 주로 사용 : ,  the-quick-brown-fox-jumps-over-the-lazy-dog 단어들을 하이픈(-)으로 이어서 한 단어로 인식 2. snake_case 주로 사용 : ,  the_quick_brown_fox_jumps_over_the_lazy_dog 단어들을 언더바(_)로 이어서 한 단어로 인식 3. camelCase 주로 사용: javsScript theQuickBrownFoxJumpsOverTheLazyDog 첫 단어의 첫번째 글자는 소문자,\n이어지는 단어들의 첫번째 글자는 대문자 3. PascalCase 주로 사용: javsScript TheQuickBrownFoxJumpsOverTheLazyDog 첫 단어의 첫번째 글자는 대문자,\n이어지는 단어들의 첫번째 글자도 대문자 4. zero-based Numbering 0 기반 번호 매기기\njavaScript 에서는 특수한 경우를 제외하고 0부터 숫자를 시작한…","fields":{"slug":"/web/notation/"},"frontmatter":{"categories":"WEB","title":"표기법","date":"2022.03.19"}},"next":{"fields":{"slug":"/css/transform/"}},"previous":{"fields":{"slug":"/javascript/variable/"}}},{"node":{"id":"5adf85a5-13e7-55c6-b48d-9707e4a8d31f","excerpt":"💙 전역 속성 HTML 에서 속성이란\n열리는 태그에 작성하는 href, target, src 같은 HTML 의 기능을 확장해주는 개념이다. 기본적으로 요소들은 자신이 사용할 수 있는 속성이 정해져 있다. (img태그: src, a태그: href 등)\n하지만 전역 속성은 body 에서 사용하는 태그들의 전체 영역에서 언제든지 사용할 수 있다. 1.title 요소의 정보나 설명을 지정한다.\n해당 요소에 마우스를 올리면 일종의 tooltip 처럼 title 속성이 출력된다. 2. style 요소에 적용할 스타일을 지정한다. 3. class 요소를 지칭하는 중복 가능한 이름이다.\ncss, js 에서 해당 요소를 제어하기 위해서 사용한다. 4. id 요소를 지칭하는 중복이 불가능한 고유한 이름이다.\n자주 사용하지는 않지만, 중요한 위치에 이름을 부여할 때에는 id 를 사용하는 것이 효율적이다.\n해당하는 요소를 빠르게 찾아서 제어할 수 있기 때문이다. 5. data <div data-이름=“…","fields":{"slug":"/web/global-attribute/"},"frontmatter":{"categories":"WEB","title":"전역 속성","date":"2022.03.09"}},"next":{"fields":{"slug":"/web/element/"}},"previous":{"fields":{"slug":"/css/add-style/"}}},{"node":{"id":"0ed462f2-24fe-5a5f-a950-e0b16475116f","excerpt":"💙 여러가지 HTML 요소들 1. div Block 요소\n특별한 의미가 없는 구분을 위한 요소 (Division) 2. h1 Block 요소\n제목을 의미하는 요소 (Heading) 중요도를 숫자로 명시하여 사용하며 (h1 ~ h6)\n숫자가 작을수록 더 중요한 제목을 의미한다. 3. p Block 요소\n문장을 의미하는 요소 (Paragraph) 4. img Inline 요소\n이미지를 삽입하는 요소 (Image) src: 삽입할 이미지의 경로 (필수 속성) alt: 삽입할 이미지의 이름 (필수 속성) / 대체 텍스트 5. ul / li (1) ul Block 요소 순서가 필요없는 목록의 집함을 의미한다. (Unordered List) (2) li Block 요소 목록 내의 각 항목을 의미한다. (List Item) 6. a Inline 요소\n다른/같은 페이지로 이동하는 하이퍼링크를 지정하는 요소 (Anchor: 닻) href: 링크 URL (Hypertext Reference) tar…","fields":{"slug":"/web/element/"},"frontmatter":{"categories":"WEB","title":"HTML Elements","date":"2022.03.08"}},"next":{"fields":{"slug":"/css/inline-block/"}},"previous":{"fields":{"slug":"/web/global-attribute/"}}},{"node":{"id":"c0ec61b0-2321-53dd-9dcd-62b09b15345c","excerpt":"💙 빈 태그 (Empty Tag) <tag></tag> 형태가 아니라,\n<tag> 처럼 열리는 태그만 있고 닫히는 태그가 없는 것을 말한다.\n안에 내용을 담을 수 없는 구조이기 때문에 빈 태그라고 부른다. 빈 태그를 작성하는 방법에는 두 가지가 있다. 1. <tag> HTML 1/2/3/4/5\n작성하기에 편리함\n열리는 태그와 헷갈릴 수 있음 2. <tag /> XHTML / HTML5\n비교적 안전함\n빈 태그라는 것을 알기 쉬움 예: , ,  … 슬래시를 작성하지 않으면, 열리는 태그와 헷갈려서 닫히는 태그를 찾느라 시간을 낭비할 수도 있다.\n빈 태그를 사용할 경우에는 되도록이면 슬래시를 붙여서 사용하는 것이 좋겠다! 💙 빈 태그 (Empty Tag) 1. <tag> 2. <tag />","fields":{"slug":"/web/empty-tag/"},"frontmatter":{"categories":"WEB","title":"빈 태그 (Empty Tag)","date":"2022.03.08"}},"next":{"fields":{"slug":"/web/element-relationship/"}},"previous":{"fields":{"slug":"/css/inline-block/"}}},{"node":{"id":"983dc93b-315d-57b3-8df2-30f85ff5764c","excerpt":"💙 Element 간의 관계 1. 부모 요소와 자식 요소 기준이 되는 요소를 ‘나’ 라고 표현하여 설명해보자면, 부모요소: 나를 감싸고 있는 바로 윗 단계에 있는 요소 자식요소: 내가 감싸고 있는 바로 아래 단계에 있는 요소 2. 상위 요소와 하위 요소 상위요소: 나를 감싸고 있는 모든 요소 하위요소: 내가 감싸고 있는 모든 요소 💙 Element 간의 관계 1. 부모 요소와 자식 요소 2. 상위 요소와 하위 요소","fields":{"slug":"/web/element-relationship/"},"frontmatter":{"categories":"WEB","title":"Element 간의 관계","date":"2022.03.08"}},"next":{"fields":{"slug":"/web/emmet/"}},"previous":{"fields":{"slug":"/web/empty-tag/"}}},{"node":{"id":"47ce1b77-a937-595f-824b-a4dd503ec158","excerpt":"💙 Emmet Emmet(에밋)은 HTML, XML 등의 문서를 편집할 때\n더욱 빠르게 코딩하기 위해서 사용되는 플러그인이다. 간단하게 태그 이름만 명시하고 탭키를 눌러서 요소를 자동으로 완성하는 것은,\n이 emmet 이라는 기능의 도움을 받고 있는 것이다. 예를 들어, div 까지만 작성하고 탭 키를 누르면 완전한 div 태그가 작성된다. 또는\ndiv.box 까지만 작성하고 탭 키를 누르게 되면 클래스 속성까지 빠르게 작성할 수 있다. 이것은 css 에서도 동일하게 적용이 가능하다.\n예를 들어 w:200, bc:orange 을 각각 작성하고 탭 키를 누르면 으로 작성할 수 있다. 이처럼 emmet 문법은 html, css 에 적용이 가능하다. 특히 html 에서 작성하는 emmet 문법은, css 선택자를 활용해서 사용할 수 있기 때문에\n아래처럼 더욱 복잡한 구조의 emmet 을 사용할 수 있다. 예: div>ul>li*4{$} 💙 Emmet","fields":{"slug":"/web/emmet/"},"frontmatter":{"categories":"WEB","title":"Emmet 을 이용해 태그 작성하기","date":"2022.03.08"}},"next":{"fields":{"slug":"/web/browser-style-reset/"}},"previous":{"fields":{"slug":"/web/element-relationship/"}}},{"node":{"id":"db75db46-0c5d-52ea-958b-373e3d20ee66","excerpt":"💙 브라우저 스타일 초기화 기본적으로 HTML 요소들은 브라우저가 정해 놓은 CSS 스타일을 사용하게 된다.\n이 스타일은 브라우저 별로 유사하긴 하지만 조금씩 다른 값들을 가지고 있다.\n그렇기 때문에 프로젝트를 시작하기 전에\n브라우저에서 기본적으로 제공하는 CSS 스타일을 초기화 하는 것이 좋다. https://www.jsdelivr.com/package/npm/reset-css\n상단의 페이지로 접속해서 reset.min.css 파일을 HTML copy 해서 head 태그 안에 작성해주면 된다. 여기서 주의할 점은, 추가적으로 연결할 css 파일은 \n반드시 스타일 초기화 css 보다 아래에서 작성되어야 한다는 것이다.\ncss link 는 작성한 순서대로 동작하기 때문에,\n위의 예제처럼 작성한다면 스타일 초기화 css 가 가장 먼저 적용된다. min (Minify) 파일명.min.확장자와 같이 min 키워드는 파일이 난독화나 경량화 되었다는 것을 의미한다.\n즉 원본 파일을 용량이 가…","fields":{"slug":"/web/browser-style-reset/"},"frontmatter":{"categories":"WEB","title":"브라우저 스타일 초기화하기","date":"2022.03.08"}},"next":{"fields":{"slug":"/web/tab-size/"}},"previous":{"fields":{"slug":"/web/emmet/"}}},{"node":{"id":"be4619c0-198b-5e82-8048-c4f4225621a3","excerpt":"💙 index.html about - index.html\nmain.html 현재 프로젝트 디렉토리 구조가 위처럼 되어있는 경우\nmain.html 에서 a 태그를 클릭하면! 주소창에는 아래와 같이 표시되고 해당 디렉토리로 이동하게 된다.\n 하지만 about 폴더로 이동만 하는 것이 아니라,\nabout 폴더 안에 있는 index.html 파일을 출력하게 된다. 이러한 동작이 가능한 이유는,\n웹 브라우저는 디폴트로 index.html 라는 이름을 가진 파일을 우선적으로 읽어들이도록 되어있기 때문에\nindex.html 파일이 들어있는 폴더의 위치만 정확하게 명시해주면\n해당 파일을 찾아서 출력하기 위해 시도하기 때문이다. 💙 index.html","fields":{"slug":"/web/index-html/"},"frontmatter":{"categories":"WEB","title":"index.html","date":"2022.03.07"}},"next":{"fields":{"slug":"/web/path/"}},"previous":{"fields":{"slug":"/web/tab-size/"}}},{"node":{"id":"c6b51338-95c1-51ee-8316-288d586a6693","excerpt":"💙 상대 경로와 절대 경로 1. 상대 경로 (1) ./ 현재 경로를 의미한다.\n생략이 가능하다. (2) ../ 현재 경로에서 상위에 있는 디렉토리를 의미한다. 2. 절대 경로 (1) http (https) ~ 원격의 다른 사이트 주소를 의미한다. (2) / (//) 최상위의 루트 경로를 의미한다. 상황에 따라서 상대 경로가 효율적일 수도 있고, 절대 경로가 효율적일 수도 있기 때문에\n현재 주어진 상황에 알맞게 사용해야 한다. 💙 상대 경로와 절대 경로 1. 상대 경로 (1) ./ (2) ../ 2. 절대 경로 (1) http (https) ~ (2) / (//)","fields":{"slug":"/web/path/"},"frontmatter":{"categories":"WEB","title":"상대 경로 vs 절대 경로","date":"2022.03.07"}},"next":{"fields":{"slug":"/web/alt/"}},"previous":{"fields":{"slug":"/web/index-html/"}}},{"node":{"id":"af4ece8c-fdb0-54f2-9ec2-669c0ba217a4","excerpt":"💙 alt Alternate 의 약어. 이미지가 출력되지 못하는 경우 대신 출력할 텍스트라고 해서 대체 텍스트 라고 부른다.\n이미지 경로가 잘못되거나 네트워크가 불안정하거나 등등 이미지를 출력할 수 없는 다양한 상황에서\n이미지 대신 화면에 보여질 글자를 말한다. img 태그를 작성할 경우 반드시 작성해야 할 필수 속성이다. 💙 alt","fields":{"slug":"/web/alt/"},"frontmatter":{"categories":"WEB","title":"img 태그의 alt 속성","date":"2022.03.07"}},"next":{"fields":{"slug":"/web/tags-in-head/"}},"previous":{"fields":{"slug":"/web/path/"}}},{"node":{"id":"4986279b-a757-5770-8777-b7948fa6771e","excerpt":"💙 정보를 의미하는 태그 1. <title></title> HTML 문서의 제목을 정의하는 태그\n웹 브라우저의 탭에 정의한 제목이 표시된다. 2. <link> 외부 문서를 가져와 연결할 때 사용한다. (대부분 CSS 파일) rel: 가져올 외부 문서와 현재 HTML 간의 관계를 명시한다. (필수 속성) href: 가져올 문서의 경로 favicon (파비콘) 은 Favorite Icon 의 줄임말이다.\n주로 favicon.ico, favicon.png 파일이 사용된다. 3. <style></style> 스타일(CSS) 를 HTML 문서 안에서 작성하는 경우에 사용한다. 4. <script></script> 자바스크립트 파일을 외부에서 가져오거나\nHTML 문서 안에서 작성하는 경우에 사용한다. scr: source 의 약어. 사용할 소스 코드(파일)를 지정하는 HTML 속성 5. <meta> 앞에서 살펴본 태그들로는 표시할 수 없는\nHTML 문서(웹 페이지)의 제작자, 내용, 키워드 …","fields":{"slug":"/web/tags-in-head/"},"frontmatter":{"categories":"WEB","title":"정보를 의미하는 태그 (title, link, style, script, meta)","date":"2022.03.07"}},"next":{"fields":{"slug":"/web/html-head-body/"}},"previous":{"fields":{"slug":"/web/alt/"}}},{"node":{"id":"672d32e5-6431-5dc1-8938-d9f961558c37","excerpt":"💙 html, head, body 1. <html></html> 문서의 전체 범위\nHTML 문서가 어디에서 시작하고, 어디에서 끝나는지 브라우저에게 알려주는 역할을 한다. <html lang=“ko”>\nlang(language 단어의 약어)은 지정할 문서의 언어(ISO 639-1)를 명시하는 HTML 속성이다.\n지정 가능한 언어 목록 : https://ko.wikipedia.org/wiki/ISO_639-1_코드_목록\n다른 나라의 언어로 설정 시, 구글 크롬에서는 페이지 번역을 할 것인지 자동으로 물어보게 된다. 2. <head></head> 문서의 정보를 나타내는 범위\n웹 브라우저가 해석해야 할 웹 페이지의 제목, 설명, 사용할 파일 위치, 스타일(CSS) 같은\n웹 페이지의 보이지 않는 정보를 작성하는 범위이다. 3. <body></body> 문서의 구조를 나타내는 범위\n사용자 화면을 통해 보여지는 로고, 헤더, 푸터, 내비게이션, 메뉴, 버튼, 이미지 같은\n웹 페이지의 보여지는…","fields":{"slug":"/web/html-head-body/"},"frontmatter":{"categories":"WEB","title":"html, head, body","date":"2022.03.07"}},"next":{"fields":{"slug":"/web/doctype/"}},"previous":{"fields":{"slug":"/web/tags-in-head/"}}},{"node":{"id":"9f9a6daf-2b19-5a55-8a19-63fa44fd8421","excerpt":"💙 DOCTYPE <!DOCTYPE html> 문서의 HTML 버전을 지정하는 부분이다.\n<!DOCTYPE html> 은 가장 최신의 표준인 HTML5 를 의미한다.\nHTML 파일이 현재 웹 표준에 알맞게 실행되도록 명시하는 것이다. DOCTYPE (DTD, Document Type Definition)\n마크업 언어에서 문서 형식을 정의하며,\n웹 브라우저가 어떤 HTML 버전의 해석 방식으로\n페이지를 이해하면 되는지를 알려주는 용도 버전: HTML1 - HTML2 - HTML3 - HTML4 - XHTML - HTML5 (현재 표준) 이전 버전을 직접 명시할 일은 사실상 없다.\n간혹 <!DOCTYPE html PUBLIC ”-//W3C//DTD XHTML 1.0 Trans …“>\n라고 명시되어져 있는 경우, XHTML 버전이라고 생각하면 된다. 💙 DOCTYPE <!DOCTYPE html>","fields":{"slug":"/web/doctype/"},"frontmatter":{"categories":"WEB","title":"DOCTYPE","date":"2022.03.07"}},"next":{"fields":{"slug":"/web/open-source-license/"}},"previous":{"fields":{"slug":"/web/html-head-body/"}}},{"node":{"id":"5c0bfc73-6e65-5d1d-88ac-bea0e9e2338f","excerpt":"💙 오픈소스 라이선스 오픈소스란 어떤 제품을 개발하는 과정에 필요한 소스 코드나 설계도를\n누구나 접근해서 열람할 수 있도록 공개하는 것을 말한다. 1. Apache License 아파치 소프트웨어 재단에서 자체 소프트웨어에 적용하기 위해 만든 라이선스\n개인적/상업적 이용, 배포, 수정, 특허 신청이 가능하다. 2. MIT License 매사추세츠 공과대학 (MIT) 에서 소프트웨어 학생들을 위해 개발한 라이선스\n개인 소스에 이 라이선스를 사용하고 있다는 표시만 지켜주면 되며\n나머지 사용에 대한 제약은 없다. 대부분 프로젝트에서는 자동으로 오픈소스가 같이 빌드되기 때문에 따로 관리할 필요는 없음 3. BSD License 버클리 캘리포니아 대학에서 개발한 라이선스\nMIT 와 동일한 조건 4. Beerware 오픈소스 개발자에게 맥주를 사줘야 하는 라이선스\n물론 만날 수 있는 경우…! 오픈소스에는 저작권이 있고 그 저작권에도 다양한 종류가 있지만, 앞서 소개한 오픈소스들은 결론적으로 …","fields":{"slug":"/web/open-source-license/"},"frontmatter":{"categories":"WEB","title":"오픈소스 라이선스","date":"2022.03.07"}},"next":{"fields":{"slug":"/web/special-characters/"}},"previous":{"fields":{"slug":"/web/doctype/"}}},{"node":{"id":"52284dfa-2cdf-544f-a64f-9f503688723d","excerpt":"💙 특수 문자의 영어/한글 이름 1. ` Backtick(백틱), Grave(그레이브)\n\nJavaScript 에서 자주 사용 2. ~ Tilde (틸드, 물결표시) 3. ! Exclamation mark (엑스클러메이션, 느낌표) 4. @ At sign (앳, 골뱅이) 5. # Sharp, Number sign (샵, 넘버, 우물 정) 6. $ Dollar sign (달러) 7. % Percent sign (퍼센트) 8. ^ Caret (캐럿) 9. & Ampersand (엠퍼센드)\n엠퍼센트 아님 10. * Asterisk (에스터리스크, 별표) 11. - Hyphen, Dash (하이픈, 대시, 마이너스) 12. _ Underscore, Low dash (언더스코어, 로우 대시, 밑줄) 13. = Equals sign (이퀄, 동등) 14. ” Quotation mark (쿼테이션, 큰 따옴표) 15. ’ Apostrophe (아포스트로피, 작은 따옴표) 16. : Colon (…","fields":{"slug":"/web/special-characters/"},"frontmatter":{"categories":"WEB","title":"특수 문자 용어","date":"2022.03.07"}},"next":{"fields":{"slug":"/web/web-image/"}},"previous":{"fields":{"slug":"/web/open-source-license/"}}},{"node":{"id":"e7683e76-36df-5aa2-b89d-f2cb4aec20b9","excerpt":"💙 웹 이미지 웹에서 사용할 수 있는 이미지라는 개념은 크게 비트맵과 벡터로 나뉘게 된다. 1. 비트맵 (Bitmap) 각각의 픽셀이 모여 만들어진 정보의 집합\n레스터(Raster) 이미지 라고도 부름 일반적인 사진, 그림은 비트맵이 훨씬 더 사용하기에 효과적임 장점: 정교하고 다양한 색상을 자연스럽게 표현할 수 있음 단점: 확대/축소 시 계단 현상이 나타나고 품질이 저하됨    (1). JPG (JPEG) Full-Color 와 Gray-scale 의 압축을 위해 만들어졌으며,\n압축률이 훌륭해 사진이나 예술 분야에서 많이 사용함 손실 압축: 이미지의 픽셀이 손실되면서 압축되기 때문에 용량이 획기적으로 줄어들 수 있음  표현 색상도(24비트, 약 1600만 색상)가 뛰어남 이미지의 품질과 용량을 쉽게 조절 가능 가장 널리 쓰이는 이미지 포맷 (2). PNG Gif 의 대체 포맷으로 개발됨 비손실 압축: 이미지가 손실되지 않으면서 압축되기 때문에 용량이 비교적 클 수 있음 8비트(2…","fields":{"slug":"/web/web-image/"},"frontmatter":{"categories":"WEB","title":"웹 이미지","date":"2022.03.07"}},"next":{"fields":{"slug":"/web/web-standards-and-browser/"}},"previous":{"fields":{"slug":"/web/special-characters/"}}},{"node":{"id":"754e9fac-f4b7-5d49-8e3c-f4a76653fa85","excerpt":"💙 웹 표준 (Web Standard) 웹 표준이란 웹에서 사용되는 표준 기술이나 규칙을 의미한다.\nW3C 의 표준화 제정 단계의 권고안(REC) 에 해당하는 기술이다. W3C 의 표준화 제정 단계는 크게 다음과 같이 4가지 단계를 가진다. 초안 (Working Draft, WD) 후보권고안 (Candidate Recommendation, CR) 제안권고안 (Proposed Recommendation, PR) 권고안 (W3C Recommendation, REC) 구글, 마이크로소프트, 애플 같은 브라우저 공급업체 (Browser Vendors) 에서는\n제정된 웹표준을 근거로 해서 브라우저를 만든다. 브라우저 공급업체가 각각 다르기 때문에\n브라우저에서 동작하는 내용들도 일부가 다를 수 있다. 💙 크로스 브라우징 (Cross Browsing) 조금은 다르게 구동되는 여러 브라우저에서, \n동일한 사용자 경험(같은 화면, 같은 동작 등)을 줄 수 있도록 제작하는 기술, 방법. 2~3년 전…","fields":{"slug":"/web/web-standards-and-browser/"},"frontmatter":{"categories":"WEB","title":"웹 표준과 브라우저","date":"2022.03.07"}},"next":{"fields":{"slug":"/web/web-application-operation-principle/"}},"previous":{"fields":{"slug":"/web/web-image/"}}},{"node":{"id":"452c80de-d0fc-526b-8236-ef86d41b275b","excerpt":"💙 웹 애플리케이션의 동작 원리 브라우저를 통해서 접속할 수 있는 사이트들은 기본적으로 이러한 구조로 동작한다. 1. 최초 요청 (Request) 사용자가 자신의 컴퓨터에서 브라우저를 통해 주소창에 프로토콜과 사이트 주소를 입력함으로써\n해당하는 사이트의 주소에 맞는 서버로 최초로 요청을 한다.  통신 프로토콜 (Communication Protocol, 통신 규약)\n컴퓨터나 원거리 통신 장비 사이에서 메시지를 주고 받는 양식 및 규칙의 체계\n(HTTP, HTTPS, FTP, SSL 등) 2. 최초 응답 (Response) 요청을 받은 서버에서는 요청이 들어온 사용자의 브라우저로 최초로 응답을 한다.\n기본적인 웹 사이트의 구조를 담고 있는 HTML 파일을 사용자에게 보낸다. 3. 추가 요청 HTML 파일을 전달받아 화면에 보여질 기본적인 구조들을 확인할 수 있다.\nHTML 파일에는 그 구조에 맞게 추가적으로 작성되어져 있는 CSS, JS, 이미지 파일들이 명시되어져 있으며\n이러한 파…","fields":{"slug":"/web/web-application-operation-principle/"},"frontmatter":{"categories":"WEB","title":"웹 애플리케이션의 동작 원리","date":"2022.03.06"}},"next":{"fields":{"slug":"/web/front-end-development/"}},"previous":{"fields":{"slug":"/web/web-standards-and-browser/"}}},{"node":{"id":"f6aaa762-bf07-553f-9187-5df811627e3e","excerpt":"💙 프론트엔드 개발 (Front-End Development) HTML, CSS, JS 를 사용해 데이터를 그래픽 사용자 인터페이스(GUI) 로 변환하고, \n그것으로 사용자와 상호작용할 수 있도록 하는 것. 사용자는 자신의 컴퓨터에서 웹페이지를 볼 수 있게 도와주는 프로그램(브라우저) 를 통해서 \n특정 사이트에 접속하고 그 사이트를 보게 된다. 1. 프론트엔드 / 앞단 (Front-End) 사용자에게 직접 보여지는 웹 사이트를 개발하는 것을 말한다. 2. 백엔드 / 뒷단 (Back-End) 보안을 요구하는 데이터들이나 비즈니스 로직을 개발하는 것을 말한다.\n앞단에서 보여지는 내용들을 가공하고 저장한다. 비즈니스 로직 (Buisness Logic)\n사이트가 동작하는데 필요한, 핵심 데이터 처리를 수행하는 알고리즘 등을 말한다. 3. 풀스택 (Full-stack) GUI 프론트엔드부터, 데이터베이스 백엔드 등 모든 소프트웨어 스택을 개발하는 것을 말한다. 💙 프론트엔드 개발의 줄기 웹…","fields":{"slug":"/web/front-end-development/"},"frontmatter":{"categories":"WEB","title":"프론트엔드 개발","date":"2022.03.05"}},"next":{"fields":{"slug":"/web/"}},"previous":{"fields":{"slug":"/web/web-application-operation-principle/"}}}]}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437"]}