{
    "componentChunkName": "component---src-templates-category-template-js",
    "path": "/posts/CSS",
    "result": {"pageContext":{"currentCategory":"CSS","categories":["All","CSS","WEB","TOOL","BLOG"],"edges":[{"node":{"id":"1e19a841-f204-5b16-83b8-047072edbfb4","excerpt":"💙 flex (정렬) display: flex; 가 부여된 요소를 container,\ncontainer 의 자식 요소를 item 이라고 부른다. 또한 flex 는 container, item 에 부여하는 속성들이 각각 나누어져 있다. 1. flex container (1) display Flex Container 의 화면 출력(보여짐) 특성 : 블록 요소와 같이 Flex Container 정의 요소가 수직으로 쌓인다. 부모 요소의 크기만큼 width 가 자동으로 늘어난다. 자신이 포함한 콘텐츠의 크기만큼 height 가 자동으로 줄어든다. width, height 가 지정한대로 적용된다. margin, padding 이 정상적으로 적용된다. 자식 요소로 Block, Inline 요소 모두 사용할 수 있다. : 인라인 요소와 같이 Flex Container 정의 요소가 수평으로 쌓인다. 자신이 포함한 콘텐츠의 크기만큼 width, height 가 자동으로 줄어든다. width, he…","fields":{"slug":"/css/flex-container/"},"frontmatter":{"categories":"CSS","title":"[CSS] flex","date":"2022.03.13"}},"next":{"fields":{"slug":"/css/positioning/"}},"previous":null},{"node":{"id":"d7dd8a85-9597-59d0-935c-ce932c213b88","excerpt":"💙 배치 관련 속성 1. position 요소의 위치 지정 기준 기본값: static - 기준 없음 relative: 요소 자신을 기준으로 함 absolute: 위치 상 부모 요소를 기준으로 함 fixed: 뷰포트(브라우저)를 기준으로 함 sticky: 스크롤 영역을 기준으로 함 2. position 과 같이 사용하는 CSS 속성들 모두 음수 사용 가능 top bottom left right z-index 3. relative 요소 자신을 기준으로 배치한다. relative 라는 특정 기준이 부여되었지만 화면에는 아무런 변화가 없다. 자기 자신을 기준으로 위에서 30px, 왼쪽에서 60px 만큼 이동되어 출력된다. 해당 요소의 기존 위치에는 요소가 차지했던 공간이 그대로 유지되기 때뮨에,\n요소를 원하는 위치에 옮기는 배치의 개념과는 거리가 있다. 실제로 position: relative 를 사용하는 배치는 거의 사용되지 않는다. 4. absolute 위치 상 부모 요소를 기준으로 …","fields":{"slug":"/css/positioning/"},"frontmatter":{"categories":"CSS","title":"[CSS] 배치","date":"2022.03.13"}},"next":{"fields":{"slug":"/css/background/"}},"previous":{"fields":{"slug":"/css/flex-container/"}}},{"node":{"id":"c07a0c1f-c930-5699-b93a-1e27fb5d626b","excerpt":"💙 배경 관련 속성 1. background-color 요소의 배경 색상\n배경 색상은 배경 이미지보다 뒤에 출력됨 기본값: transparent - 투명함 색상: 지정 가능한 색상 2. background-image 요소의 배경 이미지 삽입 기본값: none - 이미지 없음 url(“경로”): 이미지 경로 (따옴표를 붙이는 것이 좋음) 3. background-repeat 요소의 배경 이미지 반복 기본값: repeat - 이미지를 수직, 수평 반복 repeat-x: 이미지를 수평 반복 repeat-y: 이미지를 수직 반복 no-repeat: 반복 없음 4. background-position 요소의 배경 이미지 위치\n보통 방향, 단위로 지정한다. 기본값: 0% 0% - 0% ~ 100% 사이 값 방향: top, bottom, left, right, center 방향 단위: px, em, rem 등 단위로 지정 5. background-size 요소의 배경 이미지 크기 기본값: au…","fields":{"slug":"/css/background/"},"frontmatter":{"categories":"CSS","title":"[CSS] 배경","date":"2022.03.13"}},"next":{"fields":{"slug":"/css/character/"}},"previous":{"fields":{"slug":"/css/positioning/"}}},{"node":{"id":"8d45c0fc-f9c0-5e51-977f-7d5a555edd11","excerpt":"💙 문자 관련 속성 1. color 글자의 색상 기본값: rgb(0, 0, 0) - 검정색 색상: 기타 지정 가능한 색상 2. text-align 문자의 정렬 방식 기본값: left - 왼쪽 정렬 right: 오른쪽 정렬 center: 가운데 정렬 justify: 양쪽 정렬 3. text-decoration 문자의 장식 (선) 기본값: none (장식 없음) underline: 밑줄 overline: 윗줄 line-through: 중앙 선 4. text-indent 문자 첫 줄의 들여쓰기\n음수 사용 가능 (내어쓰기, outdent) 기본값: 0 - 들여쓰기 없음 단위: px, em, rem 등 단위로 지정 💙 문자 관련 속성 1. color 2. text-align 3. text-decoration 4. text-indent","fields":{"slug":"/css/character/"},"frontmatter":{"categories":"CSS","title":"[CSS] 문자","date":"2022.03.13"}},"next":{"fields":{"slug":"/css/font/"}},"previous":{"fields":{"slug":"/css/background/"}}},{"node":{"id":"de691610-2e93-5cd1-95ae-0b3a580204ea","excerpt":"💙 글꼴 (font) 1. font-style 글자의 기울기를 의미한다. 기본값: normal - 기울기 없음 italic: 이텔릭체 (기울어진 글자) 2. font-weight 글자의 두께(가중치)를 의미한다.\n보통 400(일반 두께), 700(두꺼운 두께) 을 많이 사용한다. 기본값: normal, 400 - 기본두께 bold, 700: 두껍게 border: 상위 요소보다 더 두껍게 lighter: 상위 요소보다 더 얇게 100 ~ 900: 100단위의 숫자 9개, normal 과 bold 이외 두께 3. font-size 글자의 크기를 의미한다.\n보통 px, em, rem 등 단위로 지정하여 사용한다. 기본값: 16px - 기본 크기 단위: px, em, rem 등 단위로 지정 %: 부모 요소의 폰트 크기에 대한 비율 smaller: 상위 요소보다 작은 크기 large: 상위 요소보다 큰 크기 xx-small ~ xx-large: 가장 작은 크기~ 가장 큰 크기까지 7단계의 …","fields":{"slug":"/css/font/"},"frontmatter":{"categories":"CSS","title":"[CSS] 글꼴","date":"2022.03.12"}},"next":{"fields":{"slug":"/css/opacity/"}},"previous":{"fields":{"slug":"/css/character/"}}},{"node":{"id":"8301cfba-491d-51ec-a640-f699b2451fb8","excerpt":"💙 투명도 (opacity) 기본값: 1 - 불투명 0~1: 0부터 1 사이의 소수점 숫자 0: 완전한 투명 1: 완전한 불투명 백분율로 나타내자면, 7% 에 해당하는 불투명도로 화면에 요소를 출력한다. \n즉 7% 만큼 불투명하고, 나머지 93% 만큼 투명하게 된다. (화면에 겨우 보이는 정도) 40% 만큼 불투명하고, 60% 만큼 투명하다. 소수점 앞의 정수 0은 생략이 가능하다. 💙 투명도 (opacity)","fields":{"slug":"/css/opacity/"},"frontmatter":{"categories":"CSS","title":"[CSS] 투명도","date":"2022.03.12"}},"next":{"fields":{"slug":"/css/display/"}},"previous":{"fields":{"slug":"/css/font/"}}},{"node":{"id":"18739db8-4cca-5cff-a095-beb1768fe8de","excerpt":"💙 display 요소의 화면 출력(보여짐) 특성을 의미한다. 1. block 상자(레이아웃) 요소를 의미한다.\n각 요소에 이미 지정되어 있는 값이다. 2. inline 글자 요소를 의미한다.\n각 요소에 이미 지정되어 있는 값이다. 3. inline-block 글자 + 상자 요소를 의미한다.\n베이스는 글자 요소 이지만, width, height 가 지정한대로 적용된다.\n각 요소에 이미 지정되어 있는 값이다. 4. flex 플렉스 박스를 의미한다. (1차원 레이아웃)\nx축 또는 y축, 즉 하나의 축만을 가지고 레이아웃을 잡는 개념이다.\n따로 지정해서 사용하는 값이다. 5. grid 그리드를 의미한다. (2차원 레이아웃)\nx축과 y축, 즉 행과 열 두 개의 축을 가지고 레이아웃을 잡는 개념이다.\n따로 지정해서 사용하는 값이다. 6. none 보여짐 특성이 없는 것을 말한다.\n이 값을 지정하면 화면에서 해당 요소가 사라진다.\n사라진다는 것은 요소가 존재하지만 화면에 보여지지 않는다는 것…","fields":{"slug":"/css/display/"},"frontmatter":{"categories":"CSS","title":"[CSS] display","date":"2022.03.12"}},"next":{"fields":{"slug":"/css/overflow/"}},"previous":{"fields":{"slug":"/css/opacity/"}}},{"node":{"id":"e6a6d45a-13ca-5b91-95c6-ffad5a3d03f4","excerpt":"💙 overflow 요소의 크기 이상으로 내용이 넘쳤을 때,\n보여짐을 제어하는 단축 속성을 의미한다. 1. 기본값:  넘친 내용을 그대로 보여준다. 2.  넘친 내용을 잘라낸다. 3.  넘친 내용을 잘라내고, 스크롤바를 생성한다.\nx축, y축 모두 스크롤바를 생성한다. 4.  넘친 내용이 있는 경우에만 잘라내고, 스크롤바를 생성한다. 넘친 내용이 있는 축에만 스크롤바를 생성한다.\n그렇기 때문에 많은 경우에 scroll 보다는 auto 를 사용한다. 5. 개별 속성 요소의 크기 이상으로 내용이 넘쳤을 때,\n보여짐을 제어하는 개별 속성 overflow-x (x축 넘침 제어) overflow-y (y축 넘침 제어) 💙 overflow 1. 기본값:  2.  3.  4.  5. 개별 속성","fields":{"slug":"/css/overflow/"},"frontmatter":{"categories":"CSS","title":"[CSS] overflow","date":"2022.03.10"}},"next":{"fields":{"slug":"/css/box-sizing/"}},"previous":{"fields":{"slug":"/css/display/"}}},{"node":{"id":"8b76012f-c488-5ff3-8214-1304fffa96f0","excerpt":"💙 box-sizing 요소의 크기 계산 기준을 지정하는 것이다. 기본값: - 요소의 내용(content)으로 크기를 계산한다. : 요소의 내용 + padding + border 로 크기를 계산한다. 1. content-box 요소의 (content)으로 크기를 계산한다. padding, border 같이 요소의 크기가 커지는 속성이 적용되었을 때,\n원하는 정확한 수치를 위해서는 width, height 를 수동으로 계산해서 명시해줘야 하는 단점이 있을 수 있다. 1. border-box 요소의  +  +  로 크기를 계산한다. 직접 명시한 width, height 사이즈를 유지하면서,\n내부에 padding, border 가 자동으로 계산되어 들어간다. 따라서 width, height 를 수동으로 계산해서 명시해줘야 하는 불편함을 겪지 않도록 해준다. 💙 box-sizing 1. content-box 1. border-box","fields":{"slug":"/css/box-sizing/"},"frontmatter":{"categories":"CSS","title":"[CSS] box-sizing","date":"2022.03.10"}},"next":{"fields":{"slug":"/css/border-radius/"}},"previous":{"fields":{"slug":"/css/overflow/"}}},{"node":{"id":"3faac376-8d3e-5ab2-aace-1fce4e055fc4","excerpt":"💙 border-radius 요소의 모서리를 둥글게 깎는 것을 의미한다. 기본값:  - 둥글게 없음 단위: px, em, vw 등 단위로 지정 해당 요소의 각 모서리에 반지름이 10px 인 동그라미를(정 원을) 배치한 후,\n요소에서 동그라미를 벗어나는 부분을 삭제하는 원리이다.  -  -  -  의\n시계 방향 순서로 적용할 수 있다. 💙 border-radius","fields":{"slug":"/css/border-radius/"},"frontmatter":{"categories":"CSS","title":"[CSS] border-radius","date":"2022.03.10"}},"next":{"fields":{"slug":"/css/border/"}},"previous":{"fields":{"slug":"/css/box-sizing/"}}},{"node":{"id":"90d0e36d-47f3-549c-bbf9-3f2f5f303861","excerpt":"💙 border 요소의 테두리 선을 지정하는 단축 속성이다.\n테두리 선의 두께가 늘어날수록 요소의 크기가 커진다. 1. border-width 요소 테두리 선의 두께를 의미한다. 기본값:  단위: px, em, % 등 단위로 지정 thin(얇은 두께), thick(두꺼운 두께) 값이 있지만 잘 사용하지 않는다. border 라는 단축 속성의 개별 속성이면서,\n각 방향별로 한번에 적용가능한 단축 속성이다. 2. border-style 요소 테두리 선의 종류를 의미한다. 기본값:  - 선 없음 solid: 실선 (일반 선) dotted: 점선 (… .) dashed: 파선 (- - - -) double: 두 줄 선 groove: 홈이 파여있는 모양 ridge: 솟은 모양 (groove 의 반대) inset: 요소 전체가 들어간 모양 outset: 요소 전체가 나온 모양 3. border-color 요소 테두리 선의 색상을 지정하는 단축 속성을 의미한다. 기본값:  색상: 선의 색상 t…","fields":{"slug":"/css/border/"},"frontmatter":{"categories":"CSS","title":"[CSS] 테두리 선(border)과 색상표현","date":"2022.03.10"}},"next":{"fields":{"slug":"/css/padding/"}},"previous":{"fields":{"slug":"/css/border-radius/"}}},{"node":{"id":"c4c6eccb-0837-5556-a955-d93152424141","excerpt":"💙 padding 1. padding (내부 여백) 요소의 내부 여백(공간)을 지정하는 단축 속성이다.\n여백이 생긴만큼 요소 자체의 크기가 커진다. 기본값:  - 내부 여백 없음 단위: px, em, vw 등 단위로 지정 %: 부모 요소의 가로 너비에 대한 비율로 지정 2. 단축 속성 단축 속성이란, 각 방향을 한 번에 적용해주는 단축키와 같은 속성을 말한다. , , , : 10px , : 10px\n, : 20px : 10px\n: 20px\n: 30px : 10px\n: 20px\n: 30px\n: 40px top 부터 시작해서 시계 방향으로 적용된다. 3. 개별 속성 각 방향마다 하나씩 적용하는 속성을 말한다. 💙 padding 1. padding (내부 여백) 2. 단축 속성 3. 개별 속성","fields":{"slug":"/css/padding/"},"frontmatter":{"categories":"CSS","title":"[CSS] padding","date":"2022.03.10"}},"next":{"fields":{"slug":"/css/margin/"}},"previous":{"fields":{"slug":"/css/border/"}}},{"node":{"id":"7ea61f10-6914-5f32-a85f-e39cf5eec4ce","excerpt":"💙 margin 1. margin (외부 여백) 요소의 외부 여백(공간)을 지정하는 단축 속성이다.\n음수 값도 사용이 가능하다. 기본값:  - 외부 여백 없음 auto: 브라우저가 여백을 계산함\n가로(세로) 너비가 있는 요소의 가운데 정렬에 활용한다. 단위: px, em, vw 등 단위로 지정 2. 단축 속성 단축 속성이란, 각 방향을 한 번에 적용해주는 단축키와 같은 속성을 말한다. , , , : 10px , : 10px\n, : 20px : 10px\n: 20px\n: 30px : 10px\n: 20px\n: 30px\n: 40px top 부터 시작해서 시계 방향으로 적용된다. 3. 개별 속성 각 방향마다 하나씩 적용하는 속성을 말한다. 💙 margin 1. margin (외부 여백) 2. 단축 속성 3. 개별 속성","fields":{"slug":"/css/margin/"},"frontmatter":{"categories":"CSS","title":"[CSS] margin","date":"2022.03.10"}},"next":{"fields":{"slug":"/css/css-unit/"}},"previous":{"fields":{"slug":"/css/padding/"}}},{"node":{"id":"10417cc2-9c4b-55db-9d5e-f8f43263b4a8","excerpt":"💙 CSS 단위 1. px (픽셀) 2. % (상대적 백분율) 3. em 해당 요소의 글꼴 크기가 1em 의 기준이 된다. 상위 요소의 font-size 가 변경되면 1em 의 기준이 바뀔 수 있으므로,\nem 단위는 잘못 사용하면 혼란스러울 수 있다. 4. rem 루트 요소(html)의 글꼴 크기가 1rem 의 기준이 된다. 기본적으로 브라우저는 따로 명시하지 않은 경우 16px 만큼의 글꼴 크기를 가진다. 5. vw 뷰포트 가로 너비의 백분율\nex) 1vw: 뷰포트 가로 너비의 1% 크기 6. vh 뷰포트 세로 너비의 백분율\nex) 10vh: 뷰포트 세로 너비의 10% 크기 💙 CSS 단위 1. px (픽셀) 2. % (상대적 백분율) 3. em 4. rem 5. vw 6. vh","fields":{"slug":"/css/css-unit/"},"frontmatter":{"categories":"CSS","title":"[CSS] 단위","date":"2022.03.09"}},"next":{"fields":{"slug":"/css/width-height/"}},"previous":{"fields":{"slug":"/css/margin/"}}},{"node":{"id":"8060fea8-a5a9-51f1-912c-0185f55f5f8a","excerpt":"💙 너비 (width, height) 요소의 가로/세로 너비를 의미한다. 1. auto 브라우저가 자동으로 너비를 계산한다.\n,  속성의 기본값이다. 2. 단위 , ,  등 단위로 지정한다.\n보통 px 를 가장 많이 사용한다. 3. Inline 요소 (기본값) width: 포함한 콘텐츠의 크기만큼 자동으로 줄어든다. height: 포함한 콘텐츠의 크기만큼 자동으로 줄어든다. 4. Block 요소 (기본값) width: 부모 요소의 크기만큼 자동으로 늘어난다. height: 포함한 콘텐츠의 크기만큼 자동으로 줄어든다. 5. max-width, max-height 요소가 커질 수 있는 최대 가로/세로 너비 기본값:  - 최대 너비 제한이 없다. 단위: px, em, vw 등 단위로 지정한다. 6. min-width, min-height 요소가 작아질 수 있는 최소 가로/세로 너비 기본값:  - 최소 너비 제한이 없다. 단위: px, em, vw 등 단위로 지정한다. 💙 너비 (widt…","fields":{"slug":"/css/width-height/"},"frontmatter":{"categories":"CSS","title":"[CSS] 너비 (width, height)","date":"2022.03.09"}},"next":{"fields":{"slug":"/css/css-properties/"}},"previous":{"fields":{"slug":"/css/css-unit/"}}},{"node":{"id":"042a325e-d1e2-5303-a9c1-1db61d456ef7","excerpt":"💙 속성 (Properties) HTML, CSS, JavaScript 에서의 속성은\n한글로는 같은 단어를 사용하지만, 영어로는 다른 단어를 사용한다. HTML: 속성 (Attributes) CSS: 속성 (Properties) JavaScript: 속성 (Properties) 1. 박스 모델 HTML 요소의 기본적인 모양을 만들어내는 여러가지 속성들을 말한다.\n여러가지 속성들에는 요소의 가로 너비, 세로 너비, 내부 여백, 외부 여백 등이 있으며,\nHTML 의 요소라는 하나의 박스를 제어해주는 속성들을 말한다. 기본적으로 HTML 의 요소는 가로 너비와 세로 너비를 가지고 있는 사각형으로 볼 수 있다. 2. 글꼴, 문자 HTML 의 모든 글자를 CSS 의 글꼴, 문자라는 여러가지 속성들을 이용해서 제어할 수 있다.\n글꼴이란 소위 폰트라고 말하는 서체를 의미한다. 3. 배경 배경에 색상을 적용하거나 이미지를 삽입하여 제어할 수 있다. 4. 배치 특정한 요소를 원하는 위치에 정확하게…","fields":{"slug":"/css/css-properties/"},"frontmatter":{"categories":"CSS","title":"[CSS] 속성","date":"2022.03.09"}},"next":{"fields":{"slug":"/css/selector-priority/"}},"previous":{"fields":{"slug":"/css/width-height/"}}},{"node":{"id":"74d27a26-e046-5d53-b2b5-31474c5803e1","excerpt":"💙 선택자 우선순위 우선순위란, 같은 요소가 여러 선언의 대상이 된 경우,\n어떤 선언의 CSS 속성을 우선적으로 적용할 지 결정하는 방법이다.  점수가 높은 선언의 우선순위가 높다.\n 점수가 같다면, 가장 마지막에 해석된 (나중에 작성된) 선언의 우선순위가 높다. 1. 점수가 높은 선언의 우선순위가 높다. 각 CSS 선택자에 예를 든 점수별로 순위를 매겨보면 아래와 같다.\n(CSS 우선순위의 점수를 계산하는 것을 명시도라고 부른다.)  important (9999999999점)\n Inline style 선언 (1000점)\n ID 선택자 (100점)\n Class 선택자 (10점)\n Tag 선택자 (1점)\n *(전체) 선택자 (0점)\n 상속 => 상속이 가능하지만 별도로 점수를 계산하지 않음 따라서 위의 코드에서는 !important 키워드를 사용한 red 컬러의 색상이 적용된다. [우선순위 점수 계산 예시] Class + Tag + Class\n10 + 1 + 10 = 21 점 Cla…","fields":{"slug":"/css/selector-priority/"},"frontmatter":{"categories":"CSS","title":"[CSS] 선택자 우선순위","date":"2022.03.09"}},"next":{"fields":{"slug":"/css/style-inherit/"}},"previous":{"fields":{"slug":"/css/css-properties/"}}},{"node":{"id":"170a40d5-88ab-5cf7-afcd-f8ac4f226c29","excerpt":"💙 스타일 상속 스타일 상속이란, \n적용된 스타일 내용이 해당하는 요소의 자식요소, 하위요소 까지 적용되는 것을 말한다. 1. 상속되는 CSS 속성들 글자/문자 관련 속성들이 상속된다. (모든 글자/문자 속성은 아님) font-style (글자 기울기) font-weight (글자 두께) font-size (글자 크기) line-height (줄 높이) font-family (폰트(서체)) color (글자 색상) text-align (정렬)\n… 2. 강제 상속 실질적으로 상속이 되지 않는 CSS 내용을 강제적으로 상속시키는 것을 말한다. \ninherit 이라는 값을 사용한다. 💙 스타일 상속 1. 상속되는 CSS 속성들 2. 강제 상속","fields":{"slug":"/css/style-inherit/"},"frontmatter":{"categories":"CSS","title":"[CSS] 스타일 상속","date":"2022.03.09"}},"next":{"fields":{"slug":"/css/attribute-selector/"}},"previous":{"fields":{"slug":"/css/selector-priority/"}}},{"node":{"id":"e38a793f-129b-5177-9654-3f6d8fbd63b4","excerpt":"💙 속성 선택자 (Attribute Selector) 1. [attr] [ABC]\n속성 ABC 를 포함한 요소를 선택한다. 2. [attr=“value”] [ABC=“XYZ”]\n속성 ABC 를 포함하면서 값이 XYZ 인 요소를 선택한다. 💙 속성 선택자 (Attribute Selector) 1. [attr] 2. [attr=“value”]","fields":{"slug":"/css/attribute-selector/"},"frontmatter":{"categories":"CSS","title":"[CSS] 속성 선택자","date":"2022.03.09"}},"next":{"fields":{"slug":"/css/pseudo-elements-selector/"}},"previous":{"fields":{"slug":"/css/style-inherit/"}}},{"node":{"id":"77fc2033-13ee-5da6-8680-50901febfb21","excerpt":"💙 가상 요소 선택자 (Pseudo-Elements) 1. before [ABC::before]\nInline 요소\n선택자 ABC 요소 내부의 앞 부분에 내용을 삽입한다. before 선택자를 사용할 경우, content 는 필수 속성이기 때문에\n만약 내용이 비어있다 하더라도  를 반드시 작성해야 한다. 2. after [ABC::after]\nInline 요소\n선택자 ABC 요소 내부의 뒷 부분에 내용을 삽입한다. 마찬가지로 after 선택자를 사용할 경우, content 는 필수 속성이기 때문에\n만약 내용이 비어있다 하더라도  를 반드시 작성해야 한다. 💙 가상 요소 선택자 (Pseudo-Elements) 1. before 2. after","fields":{"slug":"/css/pseudo-elements-selector/"},"frontmatter":{"categories":"CSS","title":"[CSS] 가상 요소 선택자","date":"2022.03.09"}},"next":{"fields":{"slug":"/css/pseudo-class-selector/"}},"previous":{"fields":{"slug":"/css/attribute-selector/"}}},{"node":{"id":"1fe4971a-ebdc-5071-9edf-17437e638888","excerpt":"💙 가상 클래스 선택자 (Pseudo-Classes) 1. hover [ABC: hover]\n선택자 ABC 의 요소에 마우스 커서가 올라가 있는 동안을 선택한다. 2. active [ABC: active]\n선택자 ABC 의 요소에 마우스를 클릭하고 있는 동안을 선택한다. 3. focus [ABC: focus]\n선택자 ABC 요소가 포커스되면 선택한다. 포커스가 가능한 요소들: input, select, textarea 등 포커스가 가능하지 않은 요소들을 포커스가 가능한 형태로 만드는 방법 tabindex 속성을 통해 Focus 가 될 수 있는 요소를 만들 수 있다.\nTab 키를 사용해 Focus 할 수 있는 순서를 지정하는 속성이다.\n순서로 (값으로) -1 이 아닌 다른 값을 넣는 것은 논리적 흐름을 방해하기 때문에 권장되지 않는다.\n(포커스는 한 페이지에서 하나의 요소만 가능하다.) 4. first child [ABC:first-child]\n선택자 ABC 가 형제 요소 중에서 첫…","fields":{"slug":"/css/pseudo-class-selector/"},"frontmatter":{"categories":"CSS","title":"[CSS] 가상 클래스 선택자","date":"2022.03.09"}},"next":{"fields":{"slug":"/css/css-selector/"}},"previous":{"fields":{"slug":"/css/pseudo-elements-selector/"}}},{"node":{"id":"88074ba3-b796-5802-94fa-8517adf6d7cb","excerpt":"💙 CSS 선택자 1. 전체선택자 (Universal Selector) 모든 요소를 선택한다. 2. 태그 선택자 (Type Selector) 태그 이름으로 요소를 선택한다. 3. 클래스 선택자 (Class Selector) HTML class 속성의 값으로 요소를 선택한다. 4. 아이디 선택자 (ID Selector) HTML id 속성의 값으로 요소를 선택한다. 5. 일치 선택자 (Basic Combinator) [ABCXYZ]\n선택자 ABC 와 XYZ 를 동시에 만족하는 요소를 선택한다. 6. 자식 선택자 (Child Combinator) [ABC > XYZ]\n선택자 ABC 의 자식 요소인 XYZ 를 선택한다. 7. 하위 선택자 (Descendant Combinator) [ABC XYZ]\n선택자 ABC 의 하위 요소인 XYZ 를 선택한다.\n‘띄어쓰기’ 가 선택자의 기호이다. 8. 인접 형제 선택자 (Adjacent Sibling Combinator) [ABC + XYZ]\n선택자…","fields":{"slug":"/css/css-selector/"},"frontmatter":{"categories":"CSS","title":"[CSS] 선택자","date":"2022.03.09"}},"next":{"fields":{"slug":"/css/add-style/"}},"previous":{"fields":{"slug":"/css/pseudo-class-selector/"}}},{"node":{"id":"6b5085d4-14b5-5cd6-8be6-87984f9f823a","excerpt":"💙 style 의 선언 방식 네가지 1. 내장 방식 <style></style> 의 내용으로 스타일을 작성하는 방식이다. 2. 인라인 방식 요소의 style 속성에 직접 스타일을 작성하는 방식이다. (선택자 없음)\n우선순위가 높아 유지보수에 악영향을 미치므로 사용이 권장되지 않는다. 3. 링크 방식 <link /> 로 외부 CSS 문서를 가져와서 연결하는 방식이다. (병렬 연결방식) 4. @import 방식 CSS의 @import 규칙으로 CSS 문서 안에서\n또 다른 CSS 문서를 가져와 연결하는 방식이다. (직렬 연결방식) 💙 style 의 선언 방식 네가지 1. 내장 방식 2. 인라인 방식 3. 링크 방식 4. @import 방식","fields":{"slug":"/css/add-style/"},"frontmatter":{"categories":"CSS","title":"[CSS] 스타일 선언 방식","date":"2022.03.09"}},"next":{"fields":{"slug":"/web/global-attribute/"}},"previous":{"fields":{"slug":"/css/css-selector/"}}},{"node":{"id":"dbb04e73-bfe0-5132-ba74-076efd2f1a1c","excerpt":"💙 글자와 상자 우리가 보는 웹사이트는 이미지를 제외하고 모두 글자와 상자로 이루어져 있다고 볼 수 있다.\n요소가 화면에 출력되는 특성은 크게 2가지로 구분된다. 1. Inline 요소 글자를 만들기 위한 요소들을 말한다.\n대표적으로 span 태그가 있다. 요소가 수평으로 쌓인다. 자신이 포함한 콘텐츠의 크기만큼 width, height 가 자동으로 줄어든다. width, height 를 지정해도 무시된다. margin(요소의 외부여백), padding(요소의 내부여백)의\n왼쪽/오른쪽 여백은 적용이 되지만, 위/아래 여백은 정상적으로 적용되지 않는다. 자식 요소로 Block 요소를 사용할 수 없다. 2. Block 요소 상자(레이아웃) 을 만들기 위한 요소들을 말한다.\n대표적으로 div 태그가 있다. 요소가 수직으로 쌓인다. 부모 요소의 크기만큼 width 가 자동으로 늘어난다. 자신이 포함한 콘텐츠의 크기만큼 height 가 자동으로 줄어든다. width, height 가 지정한…","fields":{"slug":"/css/inline-block/"},"frontmatter":{"categories":"CSS","title":"[CSS] Inline 요소와 Block 요소","date":"2022.03.08"}},"next":{"fields":{"slug":"/web/empty-tag/"}},"previous":{"fields":{"slug":"/web/element/"}}}]}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437"]}